/**
 * Created by Benjamin on 05-05-2017.
 */
function detectIE() {
    var a = window.navigator.userAgent, b = a.indexOf("MSIE ");
    if (b > 0) return parseInt(a.substring(b + 5, a.indexOf(".", b)), 10);
    if (a.indexOf("Trident/") > 0) {
        var c = a.indexOf("rv:");
        return parseInt(a.substring(c + 3, a.indexOf(".", c)), 10);
    }
    var d = a.indexOf("Edge/");
    return d > 0 && parseInt(a.substring(d + 5, a.indexOf(".", d)), 10);
}

!function(a) {
    a.fn.toggleCheck = function() {
        this.each(function() {
            this.checked = !this.checked;
        });
    }, a.fn.hasSetWidth = function() {
        return "" != this[0].style.width;
    }, a.fn.getWidth = function() {
        return this[0].style.width;
    }, a.fn.hasSetHeight = function() {
        return "" != this[0].style.height;
    }, a.fn.getHeight = function() {
        return this[0].style.height;
    }, a.fn.attributeChange = function(a) {
        var b = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, c = this[0];
        if (b) {
            new b(function(b) {
                a(c, b[0].attributeName);
            }).observe(c, {
                subtree: !1,
                attributes: !0,
                attributeOldValue: !1
            });
        } else "onpropertychange" in document.body && (c.onpropertychange = function(b) {
            a(c, b.propertyName);
        });
    };
}(jQuery), materialFramework = {
    core_elements: {},
    isAppleOrSaferi: navigator.userAgent.indexOf("Safari") != -1 && navigator.userAgent.indexOf("Chrome") == -1 || /iPad|iPhone|iPod/.test(navigator.platform),
    init: function(a) {
        materialFramework.core_elements.ink.init(), this.updateElements(), this.autoUpdate = void 0 === a || a === !0,
        this.autoUpdate && document.addEventListener("DOMNodeInserted", materialFramework.updateElements),
            this.tools.handelDefaultNotifications();
    },
    autoUpdate: !0,
    setAutoupdate: function(a) {
        a != this.autoUpdate && (this.autoUpdate = a === !0, this.autoUpdate ? (document.addEventListener("DOMNodeInserted", materialFramework.updateElements),
            this.updateElements()) : document.removeEventListener("DOMNodeInserted", materialFramework.updateElements));
    },
    updateElements: function() {
        materialFramework.core_elements.checkbox.init(), materialFramework.core_elements.icon.init(),
            materialFramework.core_elements.input.init();
    }
}, materialFramework.core_elements.checkbox = {
    add_require_element: function() {
        $('.material-checkbox[type="checkbox"]').hide(), $(".material-checkbox:not([data-initilized])").attr("data-initilized", !0).change(function() {
            var a = $(this);
            a.next().attr("aria-checked", a[0].checked ? "true" : "false"), 9 == detectIE() ? a[0].checked ? a.next().find(".material-checkbox_inner").css({
                borderColor: "#0f9d58",
                borderTop: "none",
                borderLeft: "none",
                msTransform: "rotate(45deg)",
                width: 10,
                height: 21,
                bottom: 4,
                left: 6
            }) : a.next().find(".material-checkbox_inner").css({
                borderColor: "#000000",
                borderTop: "2px solid",
                borderLeft: "2px solid",
                msTransform: "rotate(0deg)",
                width: 18,
                height: 18,
                bottom: 0,
                left: 0
            }) : $(this).parent().hasClass("material-no-animation") ? a[0].checked ? a.delay(250).next().find(".material-checkbox_inner").css({
                borderColor: "#0f9d58",
                borderTop: "none",
                borderLeft: "none"
            }) : a.delay(250).next().find(".material-checkbox_inner").css({
                borderColor: "#000000",
                borderTop: "2px solid",
                borderLeft: "2px solid"
            }) : setTimeout(function() {
                a[0].checked ? a.delay(250).next().find(".material-checkbox_inner").css({
                    borderColor: "#0f9d58",
                    borderTop: "none",
                    borderLeft: "none"
                }) : a.delay(250).next().find(".material-checkbox_inner").css({
                    borderColor: "#000000",
                    borderTop: "2px solid",
                    borderLeft: "2px solid"
                });
            }, 250);
        }).wrap("<label class='material-checkbox-label material-no-animation'></label>").parent().append("<div class='material-checkbox_outer' tabindex='0'  role='checkbox' aria-checked='false'>\n    <div class=\"material-checkbox_inner\"></div>\n</div>").append("<div class='material-checkbox_ink' ></div>").queue(function() {
            "disabled" == $(this).find("input").attr("disabled") && $(this).find(".material-checkbox_outer").attr("tabindex", -1),
                $(this).find("input").attributeChange(function(a, b) {
                    "disabled" == b && ("disabled" == $(a).attr("disabled") ? $(a).next().attr("tabindex", -1) : $(a).next().attr("tabindex", 0));
                });
            var a = $(this);
            setTimeout(function() {
                a.removeClass("material-no-animation");
            }, 550);
        }).find("input").trigger("change").click(function() {
            $(this).next().finish().focus().delay(300).queue(function() {
                $(this).blur();
            });
        }).next().keyup(function(a) {
            if (32 == a.which && !$(this).prev().is(":disabled")) return $(this).prev()[0].checked = !$(this).prev()[0].checked,
                $(this).prev().trigger("change"), !1;
        }).keydown(function(a) {
            if (32 == a.which) return !1;
        }), $(".material-radio:not([data-initilized])").attr("data-initilized", !0).wrap("<label class='material-radio-label'></label>").parent().append("<div class='material-radio_outer'>\n    <div class=\"material-radio_inner\"></div>\n</div>").append("<div class='material-checkbox_ink' ></div>").mouseup(function(a) {
            var b = $(this).find("input");
            setTimeout(function() {
                b.blur();
            }, 300);
        }).find("input");
    },
    init: function() {
        this.add_require_element();
    }
}, materialFramework.core_elements.icon = {
    icons: {
        plus: [ [ 50, 5, 50, 95, 1 ], [ 5, 50, 95, 50, 1 ], [ 0, 0, 0, 0, 0 ] ],
        close: [ [ 15, 15, 85, 85, 1 ], [ 15, 85, 85, 15, 1 ], [ 0, 0, 0, 0, 0 ] ],
        check: [ [ 35, 80, 5, 52, 1 ], [ 95, 15, 35, 80, 1 ], [ 0, 0, 0, 0, 0 ] ],
        menu: [ [ 10, 20, 90, 20, 1 ], [ 10, 50, 90, 50, 1 ], [ 10, 80, 90, 80, 1 ] ],
        arrow_back: [ [ 10, 50, 40, 20, 1 ], [ 20, 50, 90, 50, 1 ], [ 10, 50, 40, 80, 1 ] ],
        arrow_forward: [ [ 90, 50, 60, 20, 1 ], [ 10, 50, 80, 50, 1 ], [ 90, 50, 60, 80, 1 ] ]
    },
    add_require_element: function() {
        $(".material-icon:not([data-initilized])").attr("data-initilized", !0).each(function() {
            var a = $(this), b = materialFramework.core_elements.icon.icons[a.attr("data-icon")];
            a.attr("data-rotation", 0).html('<svg style="stroke:inherit;stroke-width:inherit; height: inherit; width: inherit">\n    <line stroke-linecap="round" x1="0" y1="0" x2="0" y2="0" opacity="0" class="material-icon-l-1" />\n    <line stroke-linecap="round" x1="0" y1="0" x2="0" y2="0" opacity="0" class="material-icon-l-2" />\n    <line stroke-linecap="round" x1="0" y1="0" x2="0" y2="0" opacity="0" class="material-icon-l-3" />\n\n</svg>').find(".material-icon-l-1").attr("x1", b[0][0] + "%").attr("y1", b[0][1] + "%").attr("x2", b[0][2] + "%").attr("y2", b[0][3] + "%").attr("opacity", b[0][4]).next().attr("x1", b[1][0] + "%").attr("y1", b[1][1] + "%").attr("x2", b[1][2] + "%").attr("y2", b[1][3] + "%").attr("opacity", b[1][4]).next().attr("x1", b[2][0] + "%").attr("y1", b[2][1] + "%").attr("x2", b[2][2] + "%").attr("y2", b[2][3] + "%").attr("opacity", b[2][4]),
                a.attributeChange(function(b, c) {
                    "data-icon" == c && materialFramework.core_elements.icon.attrChanged(a);
                });
        });
    },
    attrChanged: function(a) {
        icon = materialFramework.core_elements.icon.icons[a.attr("data-icon")], $.Velocity && !a.hasClass("material-icon_no_animation") ? a.attr("data-rotation") % 360 == 0 ? a.attr("data-rotation", parseInt(a.attr("data-rotation")) + 180).velocity({
            rotateZ: "+=180"
        }).find(".material-icon-l-1").velocity({
            x1: 100 - icon[0][0] + "%",
            y1: 100 - icon[0][1] + "%",
            x2: 100 - icon[0][2] + "%",
            y2: 100 - icon[0][3] + "%",
            opacity: icon[0][4]
        }).next().velocity({
            x1: 100 - icon[1][0] + "%",
            y1: 100 - icon[1][1] + "%",
            x2: 100 - icon[1][2] + "%",
            y2: 100 - icon[1][3] + "%",
            opacity: icon[1][4]
        }).next().velocity({
            x1: 100 - icon[2][0] + "%",
            y1: 100 - icon[2][1] + "%",
            x2: 100 - icon[2][2] + "%",
            y2: 100 - icon[2][3] + "%",
            opacity: icon[2][4]
        }) : a.attr("data-rotation", parseInt(a.attr("data-rotation")) + 180).velocity({
            rotateZ: "+=180"
        }).find(".material-icon-l-1").velocity({
            x1: icon[0][0] + "%",
            y1: icon[0][1] + "%",
            x2: icon[0][2] + "%",
            y2: icon[0][3] + "%",
            opacity: icon[0][4]
        }).next().velocity({
            x1: icon[1][0] + "%",
            y1: icon[1][1] + "%",
            x2: icon[1][2] + "%",
            y2: icon[1][3] + "%",
            opacity: icon[1][4]
        }).next().velocity({
            x1: icon[2][0] + "%",
            y1: icon[2][1] + "%",
            x2: icon[2][2] + "%",
            y2: icon[2][3] + "%",
            opacity: icon[2][4]
        }) : a.find(".material-icon-l-1").attr("x1", icon[0][0] + "%").attr("y1", icon[0][1] + "%").attr("x2", icon[0][2] + "%").attr("y2", icon[0][3] + "%").attr("opacity", icon[0][4]).next().attr("x1", icon[1][0] + "%").attr("y1", icon[1][1] + "%").attr("x2", icon[1][2] + "%").attr("y2", icon[1][3] + "%").attr("opacity", icon[1][4]).next().attr("x1", icon[2][0] + "%").attr("y1", icon[2][1] + "%").attr("x2", icon[2][2] + "%").attr("y2", icon[2][3] + "%").attr("opacity", icon[2][4]);
    },
    init: function() {
        this.add_require_element();
    }
}, materialFramework.core_elements.ink = {
    init: function() {
        $(document).on("mousedown", ".material-ink, .new_ink", function(a) {
            var b = $(this);
            0 == b.children(".material-ink_outer").length && (b.append("<div class='material-ink_outer'><span class='material-ink_e'></span></div>"),
            materialFramework.isAppleOrSaferi && $(this).click());
            var c = b.children(".material-ink_outer").find(".material-ink_e");
            if (b.data("material-ink-color") && c.css("background-color", b.data("data-material-ink-color")),
                    c.removeClass("animate"), !c.height() && !c.width()) {
                var d = Math.max(b.outerWidth(), b.outerHeight());
                c.css({
                    height: d,
                    width: d
                });
            }
            var e = a.pageX - b.offset().left - c.width() / 2, f = a.pageY - b.offset().top - c.height() / 2;
            c.css({
                top: f + "px",
                left: e + "px"
            }).addClass("animate");
        });
    },
    fire_ink: function(a, b, c) {
        0 == a.children(".material-ink_outer").length && a.append("<div class='material-ink_outer'><span class='material-ink_e'></span></div>");
        var d = a.children(".material-ink_outer").find(".material-ink_e");
        if (a.data("material-ink-color") && d.css("background-color", a.data("data-material-ink-color")),
                d.removeClass("animate"), !d.height() && !d.width()) {
            var e = Math.max(a.outerWidth(), a.outerHeight());
            d.css({
                height: e,
                width: e
            });
        }
        d.css({
            top: c + "px",
            left: b + "px"
        }).addClass("animate");
    }
}, materialFramework.core_elements.input = {
    last_mouse_down: 0,
    resizeTextarea: function(a, b, c) {
        jQuery(a).css("height", "auto").css("height", a.scrollHeight + b < c ? c : a.scrollHeight + b);
    },
    add_require_element: function() {
        $(".material-input:not([data-initilized])").attr("data-initilized", !0).each(function() {
            $(this).wrap('<div class="material input down ' + ($(this).is("textarea") ? "material-textarea" : "") + '"></div>');
            var a = $(this).parent();
            if ($(this).data("material-width-percent") ? (a.css("width", $(this).data("material-width-percent") + "%"),
                    $(this).css("width", "100%")) : $(this).hasSetWidth() ? a.css("width", $(this).getWidth()) : a.css("width", $(this).css("width")),
                    $(this).is("textarea")) {
                $(this).mouseup(function() {
                    $(this).data("material-width-percent") ? (a.css("width", $(this).data("material-width-percent") + "%"),
                        $(this).css("width", "100%")) : $(this).hasSetWidth() ? a.css("width", $(this).getWidth()) : a.css("width", $(this).css("width"));
                });
                var b = 0;
                if (void 0 !== $(this).data("material-min-height") && (b = parseFloat($(this).data("material-min-height"))),
                        $(this).hasClass("material-autosize")) {
                    var c = this.offsetHeight - this.clientHeight;
                    jQuery(this).on("keyup input", function() {
                        materialFramework.core_elements.input.resizeTextarea(this, c, b);
                    }), materialFramework.core_elements.input.resizeTextarea(this, c, b);
                }
            }
            a.append('<span class="highlight-bar"></span><span class="bar">   <span class="left"></span>   <span class="right"></span></span><label>' + $(this).attr("placeholder") + "</label><div>"),
                a.find("label").click(function() {
                    a.find("input, textarea").trigger("focus");
                }), $(this).data("material-regexp") && (new RegExp($(this).data("material-regexp")).test($(this).val()) ? a.addClass("material-valid").append("<div class='material-error-label'>" + $(this).data("material-error") + "</div>") : a.addClass("material-input-fail").append("<div class='material-error-label'>" + $(this).data("material-error") + "</div>")),
            $(this).attr("maxlength") && a.append('<div class="material-char-count"><span class="material-char-count-currant">' + $(this).val().length + "</span>/" + $(this).attr("maxlength") + "</div>"),
                a.append('<div class="clear"></div>'), $(this).bind("input propertychange" + (9 == detectIE() ? " keyup" : ""), function() {
                $(this).data("material-regexp") && (new RegExp($(this).data("material-regexp")).test($(this).val()) ? a.addClass("material-valid").removeClass("material-input-fail") : a.addClass("material-input-fail").removeClass("material-valid")),
                $(this).attr("maxlength") && a.find(".material-char-count-currant").html($(this).val().length);
            }), $(this).attr("placeholder", ""), 0 != $(this).val().length && a.addClass("up"),
                $(this).focusout(function() {
                    $(this).parent().removeClass("focused"), 0 == $(this).val().length ? $(this).parent().addClass("down").removeClass("up") : $(this).parent().addClass("up").removeClass("down");
                }), a.mousedown(function(a) {
                materialFramework.core_elements.input.last_mouse_down = a.pageX;
            }), $(this).change(function() {
                $(this).trigger("focusout");
            }), $(this).focusin(function(a) {
                var b = $(this).parent();
                $(this).parent().addClass("up").removeClass("down"), b.addClass("focused"), $(this).hasClass("material-input_no_float") ? b.addClass("material-input_no_float") : b.removeClass("material-input_no_float");
                var c = materialFramework.core_elements.input.last_mouse_down - $(this).offset().left, d = c / $(this).width() * 100;
                d > 100 && (d = 99);
                var e = 100 - d;
                b.find(".bar .left, .bar .right").css({
                    transition: ""
                }), b.find(".bar .left, .bar .right").css({
                    left: d + "%",
                    right: e + "%"
                }), setTimeout(function() {
                    b.find(".bar .left, .bar .right").css({
                        transition: "0.3s ease all"
                    }), b.find(".bar .left").css({
                        left: "0"
                    }), b.find(".bar .right").css({
                        right: "0"
                    });
                }, 100);
            });
        }), $(".material-button:not([data-initilized])").attr("data-initilized", !0).each(function() {
            $(this).parent().is("a") && $(this).parent().attr("tabindex", -1);
        });
    },
    init: function() {
        this.add_require_element();
    }
}, materialFramework.tools = {
    validation_group: function(a) {
        var b = $("[data-material-validation-group=" + a + "]"), c = 0;
        return b.each(function() {
            $(this).parent().hasClass("material-valid") && c++;
        }), b.size() == c;
    },
    alert: function(a, b, c, d) {
        var e = this.custom('<p class="material-alert-header">' + a + "</p><p>" + b + '</p><div class="material-alert-bottom"> <button class="material-ink material-button material-prim-text-color">' + c + " </button></div>", d);
        e.obj.find("button").click(function() {
            e.close();
        }), e.obj.keydown(function(a) {
            a.stopPropagation(), 27 != a.which && 13 != a.which || e.close();
        }), setTimeout(function() {
            e.obj.find("button").focus();
        }, 0);
    },
    confirm: function(a, b, c, d, e, f, g) {
        void 0 === g && (g = function(a) {
            a.close(), f();
        });
        var h = this.custom('<p class="material-alert-header">' + a + "</p><p>" + b + '</p><div class="material-alert-bottom"> <button class="material-ink material-button material-alert-confirm-fail">' + d + ' </button> <button class="material-ink material-button material-alert-confirm-ok material-prim-text-color">' + c + " </button></div>", g);
        return h.obj.find(".material-alert-confirm-ok").click(function() {
            h.close(), e();
        }), setTimeout(function() {
            h.obj.find(".material-alert-confirm-ok").focus();
        }, 0), h.obj.find(".material-alert-confirm-fail").click(function() {
            h.close(), f();
        }), h.obj.keydown(function(a) {
            a.stopPropagation(), 27 == a.which ? (h.close(), f()) : 37 != a.which && 38 != a.which && 39 != a.which && 40 != a.which && 9 != a.which || (a.preventDefault(),
                    h.obj.find(".material-alert-confirm-ok").is(":focus") ? h.obj.find(".material-alert-confirm-fail").focus() : h.obj.find(".material-alert-confirm-ok").focus());
        }), h;
    },
    prompt: function(a, b, c, d, e, f, g, h, i, j, k) {
        var l = this.prompt_form(a, b, c, d, function(a) {
            e(a[0]);
        }, f, [ {
            regexp: i,
            error_msg: j,
            placeholder: g,
            value: h
        } ], k), m = l.obj.find("input").get(0);
        return m.selectionStart = 0, m.selectionEnd = m.value.length, l;
    },
    form_error: "Complete the formular",
    prompt_form: function(a, b, c, d, e, f, g, h) {
        function i(a) {
            if (materialFramework.tools.validation_group(k)) {
                var b = [];
                a.obj.find("input").each(function() {
                    b.push($(this).val());
                }), a.close(), e(b);
            } else a.obj.find(".material-popup-error").css("opacity", 1), setTimeout(function() {
                a.obj.find(".material-popup-error").css("opacity", 0);
            }, 5e3);
        }
        for (var j = "", k = "prompt-" + new Date().getTime(), l = !1, m = 0; m < g.length; m++) {
            var n = g[m];
            j += '<div style="margin-top: 10px"><input class="material-input" type="' + (void 0 === n.type ? "text" : n.type) + '" ',
            void 0 !== n.regexp && (l = !0, j += 'data-material-validation-group="' + k + '" data-material-regexp="' + n.regexp + '" data-material-error="' + n.error_msg + '" '),
            void 0 !== n.value && (j += 'value="' + n.value + '" '), j += ' placeholder="' + n.placeholder + '" ></div>';
        }
        var o = this.custom('<p class="material-alert-header">' + a + "</p><p>" + b + '</p><div style="' + (l ? "margin-bottom: 10px;" : "") + 'clear: both">' + j + '</div><div class="material-alert-bottom">' + (l ? '<div class="material-popup-error" >' + this.form_error + "</div>" : "") + '<div style="display: inline-block;"><button class="material-ink material-button material-alert-confirm-fail">' + d + ' </button> <button class="material-ink material-button material-alert-confirm-ok material-prim-text-color">' + c + " </button></div></div>", h);
        return o.obj.find(".material-alert-confirm-ok").click(function() {
            i(o);
        }), o.obj.find(".material-alert-confirm-fail").click(function() {
            o.close(), f();
        }), setTimeout(function() {
            o.obj.find("input:first").focus();
        }, 0), o.obj.keydown(function(a) {
            a.stopPropagation(), 27 == a.which ? (o.close(), f()) : 13 == a.which && i(o);
        }), materialFramework.autoUpdate || materialFramework.core_elements.input.init(),
            o;
    },
    custom: function(a, b) {
        var c = {
            obj: $('<div class="material-alert" style="display: none" tabindex="1"><div><div class="material-fadeout"><div class="material-z3">' + a + "</div></div></div></div>").appendTo("body").fadeIn(200),
            isClosed: !1,
            close: function() {
                if (!this.isClosed) {
                    this.isClosed = !0;
                    var a = this;
                    a.obj.fadeOut(200, function() {
                        a.obj.remove(), a.onClose();
                    });
                }
            },
            onClose: function() {},
            bindEsc: function() {
                this.obj.keydown(function(a) {
                    a.stopPropagation(), a.preventDefault(), 27 == a.which && c.close();
                });
            }
        };
        return setTimeout(function() {
            c.obj.focus();
        }, 0), "function" != typeof b && void 0 !== b || c.obj.find(">div>div").click(function(a) {
            "material-fadeout" == a.target.className && ("function" == typeof b ? b(c) : c.close());
        }), c;
    },
    new_notification: function(a) {
        var b = !1, c = {
            text: "",
            place: 4,
            time: 3e3,
            css: "",
            cssInner: "",
            actiontext: "",
            action: !1,
            actiontextcolor: "#FFF"
        };
        for (var d in a) c[d] = a[d];
        b = 0 == $(".material-notification[data-material-place=" + c.place + "]").length ? $('<div class="material-notification" data-material-place="' + c.place + '"></div>').appendTo("body") : $(".material-notification[data-material-place=" + c.place + "]");
        var e = $("<div class='material-notification-stripe " + c.css + "' data-material-allready-processed><div class='material-notification-stripe-inner " + c.cssInner + "'>" + c.text + "</div></div>");
        e.appendTo(b).animate({
            opacity: 1,
            top: 0
        }, 200), setTimeout(function() {
            e.animate({
                left: 1 == c.place || 4 == c.place ? "-300px" : "300px"
            }, 100).delay(100).animate({
                height: 0,
                margin: 0
            }, 100), delete e;
        }, c.time), c.action && e.append("<div class='material-notification-action'>" + c.actiontext + "</div>").find(".material-notification-action").click(function() {
            e.animate({
                left: 1 == c.place || 4 == c.place ? "-300px" : "300px"
            }, 100).delay(100).animate({
                height: 0,
                margin: 0
            }, 100), c.action();
        }).css("color", c.actiontextcolor), delete b;
    },
    handelDefaultNotifications: function() {
        $(".material-notification").each(function() {
            var a = $(this).data("material-place");
            $(this).find(".material-notification-stripe:not([ data-material-allready-processed ])").each(function() {
                var b = $(this);
                setTimeout(function() {
                    b.animate({
                        left: 1 == a || 4 == a ? "-300px" : "300px"
                    }, 100).delay(100).animate({
                        height: 0,
                        margin: 0
                    }, 100);
                }, void 0 !== b.data("material-duration") ? parseInt(b.data("material-duration")) : 3e3);
            });
        });
    }
};